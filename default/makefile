#
# Makefile to automate basic steps in pentest projects
#
# For more information about make(1) and makefiles, please see
#     https://www.gnu.org/software/make/
#
# Author
#     GhostActive, https://github.com/ghostactive
#
# Copyright (C)
#     2022 GhostActive
#
# License
#     GNU General Public License v3.0
#
SHELL=/bin/bash
#
# General Section
#

# Sample folder structure for web application testing. Append or remove
# folders as you need. 
FOLDERS := tmp discovery out/fuff out/nikto out/nmap out/sslscan out/testssl
#FOLDERS := tmp workspace

# Create specified sub folders in the current project folder
init:
	@$(foreach FOLDER, $(FOLDERS), mkdir -p $(FOLDER);)

# Clean up the project's tmp folder
clean:
	rm -fr tmp/*

#
# Web Application Penetration Testing
#
# The following section contains the definition of variables and targets used 
# in projects for web application penetration testing.

# Definition of one or more plain text files containing targets in the test
# scope. Each file is referenced by its file path.
TARGET_FILES := targets.txt
#TARGET_FILES := targets.txt targets2.txt targets3.txt

# Filters all items/targets from TARGET_FILES - Empty lines and comments are
# filtered out
SCOPE = $(shell grep -vE "^\s*(\#|\$$)" $(TARGET_FILES) | sort -u)

# Checks whether all TARGETS_FILES exist and contain at least one target. If no
# errors are occurred, then the execution finish quietly; Otherwise an error
# message is printed and the process will abort.
check: $(TARGET_FILES)
	@if [ -z "$(SCOPE)" ]; then\
		echo "Warning: Scope is empty: Can't find targets in '$(TARGET_FILES)'.";\
		exit 2;\
	fi

# Prints all items in SCOPE. Make sure to run 'init' before using 'scope' in
# order to create required 'tmp' sub folder.
scope: check tmp/
	@echo "$(SCOPE)" | tr ' ' '\n' | tee tmp/targets.filtered.txt

# Resolves given URLs from the scope to IP addresses and stores the result to
# 'tmp/targets.*.txt'.
#
# WARNING    Make sure that all TARGET_FILES contain only URLs. Also check
#            whether resolved IP addresses from targets are dynamic or static
#            before using the results for further test steps.
resolve: scope tmp/targets.filtered.txt
	@dig -f tmp/targets.filtered.txt +noall +answer > tmp/targets.resolve.txt
	@dig -f tmp/targets.filtered.txt +short | sort -uV > tmp/targets.ip.txt
